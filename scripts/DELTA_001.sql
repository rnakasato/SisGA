CREATE TABLE ESTADO (
  ID_ESTADO serial NOT NULL,
  UF varchar(10) NOT NULL default '',
  DESCRIPTION varchar(20) NOT NULL default '',
  CONSTRAINT ESTADO_FK PRIMARY KEY(ID_ESTADO)
);

CREATE TABLE CIDADE (
  ID_CIDADE serial NOT NULL ,
  ID_ESTADO serial NOT NULL,
  UF varchar(4) NOT NULL default '',
  DESCRIPTION varchar(250) NOT NULL default '',
  CONSTRAINT CIDADE_PK PRIMARY KEY (ID_CIDADE),
  CONSTRAINT ESTADO_FK FOREIGN KEY(ID_ESTADO)
   REFERENCES ESTADO (ID_ESTADO) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
); 

CREATE TABLE TIPO_TELEFONE (
  ID_TIPO_TELEFONE serial NOT NULL ,
  DESCRIPTION varchar(250) NOT NULL default '',
  CONSTRAINT TIPO_TELEFONE_PK PRIMARY KEY (ID_TIPO_TELEFONE)  
); 

CREATE TABLE TELEFONE (
  ID_TELEFONE serial NOT NULL ,
  ID_TIPO_TELEFONE integer NOT NULL ,
  NUMERO varchar(250) NOT NULL default '',
  DDD varchar(2) NOT NULL default '',
  CONSTRAINT TELEFONE_PK PRIMARY KEY (ID_TELEFONE),
  CONSTRAINT TIPO_TELEFONE_FK FOREIGN KEY(ID_TIPO_TELEFONE)
    REFERENCES TIPO_TELEFONE (ID_TIPO_TELEFONE) MATCH SIMPLE
       ON UPDATE NO ACTION ON DELETE NO ACTION  
); 

CREATE TABLE FUNCIONARIO
(
  ID_FUNCIONARIO serial NOT NULL,
  DESCRIPTION varchar(250) NOT NULL default '',
  INSERTDATE date NOT NULL,  
  NOME character varying(250) NOT NULL,  
  SOBRENOME character varying(250) NOT NULL,  
  CARTEIRA_NUMERO character varying(250) NOT NULL,   	
  CARTEIRA_SERIE character varying(250) NOT NULL,  
  EMAIL character varying(250) NOT NULL,  
  COD_CPF character varying(11) NOT NULL,  
  COD_RG character varying(9) NOT NULL,  
  ID_CIDADE integer not null,
  BAIRRO character varying(250) NOT NULL,	
  NUMERO_RESIDENCIA character varying(5) NOT NULL,  
  SALARIO NUMERIC(6,2) NOT NULL,  
  CONSTRAINT FUNCIONARIO_PK PRIMARY KEY (ID_FUNCIONARIO),
  CONSTRAINT CIDADE_FK FOREIGN KEY(ID_CIDADE)
   REFERENCES CIDADE (ID_CIDADE) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION	
);

CREATE TABLE FUNCIONARIO_TELEFONE (
  ID_TELEFONE integer NOT NULL ,
  ID_FUNCIONARIO integer NOT NULL ,
  CONSTRAINT TELEFONE_FK FOREIGN KEY(ID_TELEFONE)
    REFERENCES TELEFONE (ID_TELEFONE) MATCH SIMPLE
       ON UPDATE NO ACTION ON DELETE NO ACTION,  
  CONSTRAINT FUNCIONARIO_FK FOREIGN KEY(ID_FUNCIONARIO)
    REFERENCES FUNCIONARIO (ID_FUNCIONARIO) MATCH SIMPLE
       ON UPDATE NO ACTION ON DELETE NO ACTION  
); 


CREATE TABLE TIPO_USUARIO
(
  ID_TIPO_USUARIO serial NOT NULL,
  DESCRIPTION character varying(250) NOT NULL,  
  INSERTDATE date NOT NULL,  
  CONSTRAINT TIPO_USUARIO_PK PRIMARY KEY (ID_TIPO_USUARIO)  	
);

CREATE TABLE USUARIO
(
  ID_USUARIO serial NOT NULL,
  ID_TIPO_USUARIO integer NOT NULL,
  DESCRIPTION varchar(250) NOT NULL default '',
  INSERTDATE date NOT NULL,    
  NOME character varying(250) NOT NULL,  
  SOBRENOME character varying(250) NOT NULL,  
  EMAIL character varying(250) NOT NULL,  
  COD_CPF character varying(11) NOT NULL,  
  COD_RG character varying(9) NOT NULL,  
  ID_CIDADE integer not null,
  BAIRRO character varying(250) NOT NULL,	
  NUMERO_RESIDENCIA character varying(5) NOT NULL,  
  NOME_USUARIO character varying(250) NOT NULL,  
  SENHA character varying(250) NOT NULL,   	
  CONSTRAINT USUARIO_PK PRIMARY KEY (ID_USUARIO),
  CONSTRAINT CIDADE_FK FOREIGN KEY(ID_CIDADE)
    REFERENCES CIDADE (ID_CIDADE) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,	
  CONSTRAINT TIPO_USUARIO_FK FOREIGN KEY(ID_TIPO_USUARIO)
    REFERENCES TIPO_USUARIO (ID_TIPO_USUARIO) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE USUARIO_TELEFONE (
  ID_TELEFONE integer NOT NULL ,
  ID_USUARIO integer NOT NULL ,
  CONSTRAINT TELEFONE_FK FOREIGN KEY(ID_TELEFONE)
    REFERENCES TELEFONE (ID_TELEFONE) MATCH SIMPLE
       ON UPDATE NO ACTION ON DELETE NO ACTION,  
  CONSTRAINT USUARIO_FK FOREIGN KEY(ID_USUARIO)
    REFERENCES USUARIO (ID_USUARIO) MATCH SIMPLE
       ON UPDATE NO ACTION ON DELETE NO ACTION  
); 

-- SEQUENCES
CREATE SEQUENCE SQ_TIPO_TELEFONE START 1;
CREATE SEQUENCE SQ_TELEFONE START 1;
CREATE SEQUENCE SQ_FUNCIONARIO START 1;
CREATE SEQUENCE SQ_TIPO_USUARIO START 1;
CREATE SEQUENCE SQ_USUARIO START 1;


